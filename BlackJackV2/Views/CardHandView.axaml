<!--
    CardHandView.axaml
    This view represents a single hand of cards in the Blackjack game.
    It includes:
    - A border that visually highlights the currently active hand.
    - A collection of card images, each clickable via a command (The clicking aspect will be removed in future updates).
    - A text block showing the hand's total value.
    - Conditional child views for placing a bet and performing actions (Hit, Fold, etc.).
    ViewModel: CardHandViewModel
-->
<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:BlackJackV2.ViewModels"
			 xmlns:converter="clr-namespace:BlackJackV2.Views.Converters"
			 xmlns:Views="clr-namespace:BlackJackV2.Views"
             x:Class="BlackJackV2.Views.CardHandView"
             x:DataType="vm:CardHandViewModel"
             mc:Ignorable="d">

	<!-- Converters used for binding logic -->
	<UserControl.Resources>
		<converter:CardPositionConverter x:Key="CardPositionConverter"/>
		<converter:ElementToIndexConverter x:Key="ElementToIndexConverter"/>
		<converter:BoolToHighlightBrush x:Key="BoolToHighlightBrush"/>
	</UserControl.Resources>


	<!-- Outer container for the hand -->
	<StackPanel>

		<!-- Border highlights if the hand is active -->
		<Border 
			BorderThickness="1"
			Margin="5"
			Padding="10"
			CornerRadius="10"
			BorderBrush="{Binding HandIsActive, Converter={StaticResource BoolToHighlightBrush}}">

			<!-- Inner layout for cards and hand value -->
			<StackPanel>

				<!-- Displays cards horizontally -->
				<ItemsControl Name="cards" ItemsSource="{Binding Cards}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal"
										Spacing="5"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<!-- Each card shown as a button with image -->
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<StackPanel>
								<!-- Binds command to click, sending card value -->
								<!-- Had to bind it using ReflectionBinding.. -->
							
								<Button	Command="{ReflectionBinding #cards.DataContext.CardClickedCommand, 
									RelativeSource={RelativeSource AncestorType=ItemsControl}}"
										CommandParameter="{Binding Value}">
									
									<Image Source="{Binding CurrentImage}" Width="100" Height="150"/>
								
								</Button>
							
							</StackPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

				<!-- Shows the total value of the hand -->
				<TextBlock Text="{Binding HandValue}" HorizontalAlignment="Center"/>

			</StackPanel>

		</Border>

		<!-- Displays action buttons only if hand is active -->
		<Views:ButtonView 
			DataContext="{Binding ButtonViewModel}" 
			IsVisible="{Binding HandIsActive}" 
			HorizontalContentAlignment="Center" 
			VerticalAlignment="Center"/>

		<!-- Displays bet input only if allowed -->
		<Views:BetView 
			DataContext="{Binding BetViewModel}" 
			IsVisible="{Binding CanPlaceBet}" 
			HorizontalAlignment="Center" 
			VerticalAlignment="Center"/>
		
	</StackPanel>
		
	
</UserControl>
